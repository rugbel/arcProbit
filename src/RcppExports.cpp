// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// logsumexp
double logsumexp(Rcpp::NumericVector x);
RcppExport SEXP _arcProbit_logsumexp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(logsumexp(x));
    return rcpp_result_gen;
END_RCPP
}
// likAGH
double likAGH(double rho, Rcpp::List list_eta, Rcpp::List list_w, int niter, DoubleVector ws, DoubleVector z);
RcppExport SEXP _arcProbit_likAGH(SEXP rhoSEXP, SEXP list_etaSEXP, SEXP list_wSEXP, SEXP niterSEXP, SEXP wsSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_eta(list_etaSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_w(list_wSEXP);
    Rcpp::traits::input_parameter< int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type ws(wsSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(likAGH(rho, list_eta, list_w, niter, ws, z));
    return rcpp_result_gen;
END_RCPP
}
// getEffects
DoubleVector getEffects(double rho, Rcpp::List list_eta, Rcpp::List list_w, int niter, DoubleVector ws, DoubleVector z);
RcppExport SEXP _arcProbit_getEffects(SEXP rhoSEXP, SEXP list_etaSEXP, SEXP list_wSEXP, SEXP niterSEXP, SEXP wsSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_eta(list_etaSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_w(list_wSEXP);
    Rcpp::traits::input_parameter< int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type ws(wsSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(getEffects(rho, list_eta, list_w, niter, ws, z));
    return rcpp_result_gen;
END_RCPP
}
// getEffectsOrd
DoubleVector getEffectsOrd(double rho, DoubleVector alphae, Rcpp::List list_eta, Rcpp::List list_y, int niter, DoubleVector ws, DoubleVector z);
RcppExport SEXP _arcProbit_getEffectsOrd(SEXP rhoSEXP, SEXP alphaeSEXP, SEXP list_etaSEXP, SEXP list_ySEXP, SEXP niterSEXP, SEXP wsSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type alphae(alphaeSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_eta(list_etaSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_y(list_ySEXP);
    Rcpp::traits::input_parameter< int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type ws(wsSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(getEffectsOrd(rho, alphae, list_eta, list_y, niter, ws, z));
    return rcpp_result_gen;
END_RCPP
}
// likAGHOrd
double likAGHOrd(double rho, DoubleVector alphae, Rcpp::List list_eta, Rcpp::List list_y, int niter, DoubleVector ws, DoubleVector z);
RcppExport SEXP _arcProbit_likAGHOrd(SEXP rhoSEXP, SEXP alphaeSEXP, SEXP list_etaSEXP, SEXP list_ySEXP, SEXP niterSEXP, SEXP wsSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type alphae(alphaeSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_eta(list_etaSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_y(list_ySEXP);
    Rcpp::traits::input_parameter< int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type ws(wsSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(likAGHOrd(rho, alphae, list_eta, list_y, niter, ws, z));
    return rcpp_result_gen;
END_RCPP
}
// pmvnorm_cpp
double pmvnorm_cpp(arma::vec& upper, double rho, double abseps);
RcppExport SEXP _arcProbit_pmvnorm_cpp(SEXP upperSEXP, SEXP rhoSEXP, SEXP absepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type abseps(absepsSEXP);
    rcpp_result_gen = Rcpp::wrap(pmvnorm_cpp(upper, rho, abseps));
    return rcpp_result_gen;
END_RCPP
}
// lik2_binary
double lik2_binary(double rho, Rcpp::NumericVector etaG, Rcpp::List list_ind, Rcpp::IntegerVector y);
RcppExport SEXP _arcProbit_lik2_binary(SEXP rhoSEXP, SEXP etaGSEXP, SEXP list_indSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type etaG(etaGSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_ind(list_indSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(lik2_binary(rho, etaG, list_ind, y));
    return rcpp_result_gen;
END_RCPP
}
// lik2_ord
double lik2_ord(double rho, Rcpp::NumericVector tauG, Rcpp::NumericVector etaG, Rcpp::List list_ind, Rcpp::IntegerVector y);
RcppExport SEXP _arcProbit_lik2_ord(SEXP rhoSEXP, SEXP tauGSEXP, SEXP etaGSEXP, SEXP list_indSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tauG(tauGSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type etaG(etaGSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type list_ind(list_indSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(lik2_ord(rho, tauG, etaG, list_ind, y));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_arcProbit_logsumexp", (DL_FUNC) &_arcProbit_logsumexp, 1},
    {"_arcProbit_likAGH", (DL_FUNC) &_arcProbit_likAGH, 6},
    {"_arcProbit_getEffects", (DL_FUNC) &_arcProbit_getEffects, 6},
    {"_arcProbit_getEffectsOrd", (DL_FUNC) &_arcProbit_getEffectsOrd, 7},
    {"_arcProbit_likAGHOrd", (DL_FUNC) &_arcProbit_likAGHOrd, 7},
    {"_arcProbit_pmvnorm_cpp", (DL_FUNC) &_arcProbit_pmvnorm_cpp, 3},
    {"_arcProbit_lik2_binary", (DL_FUNC) &_arcProbit_lik2_binary, 4},
    {"_arcProbit_lik2_ord", (DL_FUNC) &_arcProbit_lik2_ord, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_arcProbit(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
